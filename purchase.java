package data;

import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ditcho
 */
public class purchase extends javax.swing.JFrame {

    /**
     * Creates new form purchase
     */
    public purchase() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        showUser();
    }
   public  ArrayList<user> userList()
    {
        ArrayList<user> userList =new ArrayList<>();
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            String url="jdbc:oracle:thin:@localhost:1521:XE";
            Connection con=DriverManager.getConnection(url,"system","120698");
            String query1="Select * from purchase";
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(query1);
            while(rs.next())
            {
               user us=new user(rs.getInt("PURCHASE_ID"),rs.getString("p_date"),rs.getString("art_name"),rs.getInt("art_id"),rs.getInt("cus_id"),rs.getInt("quantity"));
               userList.add(us);
            }
         }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,e);
        }
        return userList;        
    }
   public void showUser()
   {
       ArrayList<user> list=userList();
       DefaultTableModel model=(DefaultTableModel) tab.getModel();
       Object[] row=new Object[6];
       for (int i=0;i<list.size();i++)
       {
           row[0]=list.get(i).getId();
           row[1]=list.get(i).getDate();
           row[2]=list.get(i).getart_name();
           row[3]=list.get(i).getart_id();
           row[4]=list.get(i).getcus_id();
           row[5]=list.get(i).getquantity();
           model.addRow(row);
       }
   }
    public int check()
    {
        if("".equals(pur_id.getText()) && "".equals(p_date.getText())&&"".equals(art_name.getText()) && "".equals(art_id.getText()) && "".equals(quan.getText()) )
        {
            JOptionPane.showMessageDialog(rootPane, "PLEASE ENTER ALL THE FEILDS","ENTER FEILDS", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        if("".equals(art_id.getText()))
        {
            JOptionPane.showMessageDialog(rootPane,"PLEASE ENTER ART_ID");
        }
        if("".equals(art_name.getText()))
        {
            JOptionPane.showMessageDialog(rootPane,"PLEASE ENTER ART NAME");
        }
        if("".equals(quan.getText()))
        {
            JOptionPane.showMessageDialog(rootPane,"PLEASE ENTER CUSTOMER ID");
        }
        if("".equals(p_date.getText()))
        {
            JOptionPane.showMessageDialog(rootPane,"PLEASE ENTER PURCHASE DATE");
        }
        if("".equals(pur_id.getText()))
        {
            JOptionPane.showMessageDialog(rootPane,"PLEASE ENTER PURCHASE ID");
        }
        }
        return 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        head = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        logo = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pur_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        quan = new javax.swing.JTextField();
        art_id = new javax.swing.JTextField();
        art_name = new javax.swing.JTextField();
        BUTTONS = new javax.swing.JPanel();
        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        delete1 = new javax.swing.JButton();
        p_date = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cus_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        head.setBackground(new java.awt.Color(0, 0, 0));
        head.setForeground(new java.awt.Color(255, 255, 204));
        head.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        head.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        heading.setBackground(new java.awt.Color(0, 0, 0));
        heading.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        heading.setForeground(new java.awt.Color(255, 255, 204));
        heading.setText("PURCHASE");
        head.add(heading, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, 270, 50));

        logo.setBackground(new java.awt.Color(0, 0, 0));
        logo.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout logoLayout = new javax.swing.GroupLayout(logo);
        logo.setLayout(logoLayout);
        logoLayout.setHorizontalGroup(
            logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        logoLayout.setVerticalGroup(
            logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        head.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        head.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1600, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("PURCHASE_ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 169, -1, -1));

        pur_id.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pur_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pur_id.setBorder(new javax.swing.border.MatteBorder(null));
        pur_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pur_idActionPerformed(evt);
            }
        });
        jPanel1.add(pur_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 165, 120, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("ART NAME:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("PURCHASE DATE:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("QUANTITY:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 520, -1, 32));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("ART ID:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, -1));

        quan.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        quan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quan.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(quan, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 520, 120, 30));

        art_id.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        art_id.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(art_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 370, 120, 30));

        art_name.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        art_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        art_name.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(art_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 120, 30));

        BUTTONS.setBackground(new java.awt.Color(255, 255, 204));
        BUTTONS.setLayout(new javax.swing.BoxLayout(BUTTONS, javax.swing.BoxLayout.LINE_AXIS));

        insert.setBackground(new java.awt.Color(0, 204, 0));
        insert.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        BUTTONS.add(insert);

        update.setBackground(new java.awt.Color(0, 204, 204));
        update.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        BUTTONS.add(update);

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        BUTTONS.add(delete);

        delete1.setBackground(new java.awt.Color(255, 0, 255));
        delete1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        delete1.setText("PRINT");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });
        BUTTONS.add(delete1);

        jPanel1.add(BUTTONS, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 600, 750, 120));

        p_date.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        p_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p_date.setBorder(new javax.swing.border.MatteBorder(null));
        p_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_dateActionPerformed(evt);
            }
        });
        jPanel1.add(p_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 233, 120, 30));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("CUSTOMER ID:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, -1, 32));

        cus_id.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cus_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cus_id.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(cus_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 448, 120, 30));

        tab.setBackground(new java.awt.Color(255, 255, 153));
        tab.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PURCHASE  ID", "DATE", "ART  NAMME", "ART ID", "CUS ID", "QUANTITY"
            }
        ));
        jScrollPane1.setViewportView(tab);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 130, 890, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 827, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void p_dateActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        

        Object[] selectionValues=new Object[6];
        selectionValues[0]="Purchase_id";
        selectionValues[1]="P_date";
        selectionValues[2]="art_name";
        selectionValues[3]="art_id";
        selectionValues[4]="cus_id";
        selectionValues[5]="quantity";
                
        
        String option=(String) JOptionPane.showInputDialog(rootPane, "Choose the field to delete the record","DELETION",JOptionPane.DEFAULT_OPTION, null, selectionValues, DISPOSE_ON_CLOSE);

         try
                {
            Class.forName("oracle.jdbc.driver.OracleDriver");  

            try (Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","120698")) {
                Statement stmt=con.createStatement();
                if(option=="Purchase_id")
                {
                    String delPur=(String)JOptionPane.showInputDialog(rootPane,"Enter purchase_id to delete");
                    
                    String query="delete from purchase where purchase_id= "+delPur;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY deleted","DELETION",JOptionPane.INFORMATION_MESSAGE);
                }
                if(option=="P_date")
                {
                    String delPur=(String)JOptionPane.showInputDialog(rootPane,"Enter purchase date to delete");
                    
                    String query="delete from purchase where p_date=\' "+delPur+'\'';
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY deleted","DELETION",JOptionPane.INFORMATION_MESSAGE);
                }
                if(option=="art_name")
                {
                    String delPur=(String)JOptionPane.showInputDialog(rootPane,"Enter ART NAME to delete");
                    
                    String query="delete from purchase where art_name=\'"+delPur+'\'';
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY deleted","DELETION",JOptionPane.INFORMATION_MESSAGE);
                }
                if(option=="art_id")
                {
                    String delPur=(String)JOptionPane.showInputDialog(rootPane,"Enter art id to delete  RECORD");
                    
                    String query="delete from purchase where art_id= "+delPur;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY deleted","DELETION",JOptionPane.INFORMATION_MESSAGE);
                }
                if(option=="cus_id")
                {
                    String delPur=(String)JOptionPane.showInputDialog(rootPane,"Enter cutomer id to delete a record");
                    
                    String query="delete from purchase where cus_id= "+delPur;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY deleted","DELETION",JOptionPane.INFORMATION_MESSAGE);
                }
                if(option=="quantity")
                {
                    String delPur=(String)JOptionPane.showInputDialog(rootPane,"Enter quantity to delete a record");
                    
                    String query="delete from purchase where quantity= "+delPur;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY deleted","DELETION",JOptionPane.INFORMATION_MESSAGE);
                }
                        
            }
            catch(Exception e)
            {
             System.out.println(e);
            }
            
            }
         catch(Exception o)
         {
             System.out.println(o);
         }
         DefaultTableModel model=(DefaultTableModel) tab.getModel();
         model.setRowCount(0);
         showUser();
    }                                      

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        
        
        Object[] selectionValues=new Object[6];
        selectionValues[0]="Purchase_id";
        selectionValues[1]="P_date";
        selectionValues[2]="art_name";
        selectionValues[3]="art_id";
        selectionValues[4]="cus_id";
        selectionValues[5]="quantity";
                
        
        String option=(String) JOptionPane.showInputDialog(rootPane, "Choose the field to update","UPDATE",JOptionPane.DEFAULT_OPTION, null, selectionValues, DISPOSE_ON_CLOSE);
        String put_id=JOptionPane.showInputDialog("Enter purchase_id to update");

        try
                {
            Class.forName("oracle.jdbc.driver.OracleDriver");  

            try (Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","120698")) {
                Statement stmt=con.createStatement();
                if(option=="Purchase_id")
                {
                    String newPur=(String)JOptionPane.showInputDialog(rootPane,"Enter new  purchase_id to update");
                    
                    String query="update purchase set purchase_id= "+newPur+" where purchase_id= "+put_id;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY UPDATED","UPDATION",JOptionPane.INFORMATION_MESSAGE);
                }
                if(option=="P_date")
                {
                    String newdate=JOptionPane.showInputDialog("Enter new purchase date to update");
                    String query="update purchase set p_date=\' "+newdate+"\' where purchase_id= "+put_id;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY UPDATED","UPDATION",JOptionPane.INFORMATION_MESSAGE);
              
                }
                if(option=="art_name")
                {
                    String newname=JOptionPane.showInputDialog("Enter new Art Name to update");
                    String query="update purchase set art_name=\' "+newname+"\' where purchase_id= "+put_id;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY UPDATED","UPDATION",JOptionPane.INFORMATION_MESSAGE);
              
                }
                if(option=="art_id")
                {
                    String newart_id=JOptionPane.showInputDialog("Enter new Art id to update");
                    String query="update purchase set art_id= "+newart_id+" where purchase_id= "+put_id;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY UPDATED","UPDATION",JOptionPane.INFORMATION_MESSAGE);
              
                }
                if(option=="cus_id")
                {
                    String newcus_id=JOptionPane.showInputDialog("Enter new customer id to update");
                    String query="update purchase set p_date= "+cus_id+" where purchase_id= "+put_id;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY UPDATED","UPDATION",JOptionPane.INFORMATION_MESSAGE);
              
                }
                if(option=="quantity")
                {
                    String newquantity=JOptionPane.showInputDialog("Enter new quantity to update");
                    String query="update purchase set quantity= "+newquantity+" where purchase_id= "+put_id;
                    System.out.println(query);
                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane,"SUCCESSFULLY UPDATED","UPDATION",JOptionPane.INFORMATION_MESSAGE);
                   
                }
                
                                
            }
            catch(Exception e)
            {
                System.out.println(e);
                JOptionPane.showMessageDialog(rootPane,"UPDATION FAILED", "FAILED",JOptionPane.WARNING_MESSAGE);
            }}
        catch(ClassNotFoundException out)
        {
           System.out.println(out);
        }
        DefaultTableModel model=(DefaultTableModel) tab.getModel();
        model.setRowCount(0);
        showUser();
    }                                      


    private void pur_idActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {                                       
            // TODO add your handling code here:

        
            if(check()==0)
            {
                String p_id=pur_id.getText();
                String date=p_date.getText();
                String name=art_name.getText();
                String art_idd=art_id.getText();
                String cu=cus_id.getText();
                String quantity=quan.getText();
                try
                {
            Class.forName("oracle.jdbc.driver.OracleDriver");  

            try (Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","120698")) {
                Statement stmt=con.createStatement();
                PreparedStatement prep=con.prepareStatement("insert  into purchase(purchase_id,p_date,art_name,art_id,cus_id,quantity) values(?,?,?,?,?,?)");
                prep.setString(1,p_id);
                prep.setString(2,date);
                prep.setString(3,name);
                prep.setString(4,art_idd);
                prep.setString(5,cu);
                prep.setString(6,quantity);
                prep.addBatch();
                con.setAutoCommit(false);
                prep.executeBatch();
                con.setAutoCommit(true);
                /*ResultSet rs=stmt.executeQuery("Select * from purchase");
                while(rs.next())
                {
                    System.out.println("name="+rs.getString("artist_name"));
                    System.out.println("country="+rs.getString("COUNTRY"));
                }
                rs.close();*/
                JOptionPane.showMessageDialog(rootPane,"INSERTION SUCCESSFUL","SUCCESS",JOptionPane.OK_OPTION);
                showUser();
                art_id.setText("");
                cus_id.setText("");
                p_date.setText("");
                quan.setText("");
                pur_id.setText("");
                art_name.setText("");
            }
        }
        catch(  HeadlessException | ClassNotFoundException | SQLException  e)
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane,"INSERTION FAILED","FAILURE",JOptionPane.ERROR_MESSAGE);
        }
         }
        else
            {
              JOptionPane.showMessageDialog(rootPane,"CANNOT INSERT NULL VALUES");
            }
        DefaultTableModel model=(DefaultTableModel) tab.getModel();
        model.setRowCount(0);
        showUser();
            
            
    }                                      

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        try {
            // TODO add your handling code here:
            tab.print(JTable.PrintMode.NORMAL);
        } catch (PrinterException ex) {
            Logger.getLogger(purchase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new purchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel BUTTONS;
    private javax.swing.JTextField art_id;
    private javax.swing.JTextField art_name;
    private javax.swing.JTextField cus_id;
    private javax.swing.JButton delete;
    private javax.swing.JButton delete1;
    private javax.swing.JPanel head;
    private javax.swing.JLabel heading;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel logo;
    private javax.swing.JTextField p_date;
    private javax.swing.JTextField pur_id;
    private javax.swing.JTextField quan;
    private javax.swing.JTable tab;
    private javax.swing.JButton update;
    // End of variables declaration                   
}
